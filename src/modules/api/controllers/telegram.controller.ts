import { Controller, Get } from '@nestjs/common';
import { TelegramService } from '../../business/services/telegram.service';
import { ApiTags } from '@nestjs/swagger';
import { ResponseMessage } from '@/shared/decorators/response-message.decorator';
import { ApiBaseResponse } from '@/shared/swagger/decorator/api-response.decorator';
import { HttpStatus } from '@nestjs/common';
import { ApiOperation, ApiResponse } from '@nestjs/swagger';

@ApiTags('Telegram')
@Controller('telegram')
export class TelegramController {
  constructor(private readonly telegramService: TelegramService) {}

  @Get('ping')
  @ResponseMessage('Ki·ªÉm tra Telegram')
  @ApiOperation({ summary: 'Ki·ªÉm tra k·∫øt n·ªëi Telegram' })
  @ApiResponse({ status: HttpStatus.OK, description: 'K·∫øt n·ªëi Telegram ho·∫°t ƒë·ªông b√¨nh th∆∞·ªùng' })
  async testTelegram() {
    const message = 'üîî *Ki·ªÉm tra th√¥ng b√°o*\n' +
                   '‚úÖ K·∫øt n·ªëi Telegram ho·∫°t ƒë·ªông b√¨nh th∆∞·ªùng\n' +
                   'üïí ' + new Date().toLocaleString();
    
    const result = await this.telegramService.sendMessage(message);
    
    return {
      success: result,
      message: result ? 'ƒê√£ g·ª≠i tin nh·∫Øn ki·ªÉm tra' : 'G·ª≠i tin nh·∫Øn th·∫•t b·∫°i'
    };
  }
}
